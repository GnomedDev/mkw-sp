{"timestamp":"1675375103","reviewRef":"refs/pull/561/head","targetRef":"refs/heads/main","requester":"GnomedDev","description":"Initial implementation of matchmaking\n\nThis PR:\r\n\r\n- Creates a new tool, `matchmaking`, which is built to accept `TCP` connections from `MKW-SP` and direct them towards the most populated room, or creates a room on the least used `gameserver`\r\n- Modifies `gameserver` to handle multiple rooms, and if the correct command line arguments are passed, connect to an existing `matchmaking` server as part of the matchmaking pool.\r\n- Splits off `gameserver`'s `async_stream.rs` into it's own library.\r\n- Adds a very basic UI Page for matchmaking, being triggered by entering `0` into the direct connection box and automatically asking a matchmaking server on localhost to finding an open room.\r\n\r\n\r\nThis is the start of an ongoing project to implement [MKW-SP Matchmaking](https://docs.google.com/document/d/12nnnkNtp28ovD2e4XNroavy8nKg_f5jByOizTJSU0UQ/edit) and is not representative of the final result.","baseCommit":"3faae2a9095cf653911c83f4f6f06b41da655ab3"}
