{"timestamp":"1685473484","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":81}},"description":"Flip if statement"}

{"timestamp":"1685473500","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":92}},"description":"In C++ we can use std::max"}

{"timestamp":"1685473572","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":108}},"description":"Usually we put static data first, I think?"}

{"timestamp":"1685473609","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":18}},"description":"`int` not `s8`"}

{"timestamp":"1685473665","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":90}},"description":"s_sticky.emplace() = {\r\n.item = ...,\r\n.quantity = ...\r\n};"}

{"timestamp":"1685562482","author":"GnomedDev","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":18}},"description":"Why? It isn't ever going to be above 127."}

{"timestamp":"1685562981","author":"riidefi","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":18}},"description":"You're right; I misread it as an implicit narrowing type conversion."}

{"timestamp":"1685563572","author":"GnomedDev","location":{"commit":"1e32d79198432e76ecca855e6536305ea9ba3448","path":"payload/sp/ItemCommand.cc","range":{"startLine":108}},"description":"I've seen it done both ways."}

{"timestamp":"1685587199","author":"MikeIsAStar","location":{"commit":"71b42c7d00f43490ea1aedf414a5ad5000d64ede","path":"payload/sp/ItemCommand.cc","range":{"startLine":18}},"description":"```suggestion\r\nstatic s8 GetMyPlayerID() {\r\n```"}

{"timestamp":"1685597835","author":"vabold","location":{"commit":"71b42c7d00f43490ea1aedf414a5ad5000d64ede","path":"payload/sp/ItemCommand.cc","range":{"startLine":25}},"description":"```suggestion\r\n    auto \u0026raceScenario = System::RaceConfig::Instance()-\u003eraceScenario();\r\n```\r\nRaceConfig is preserved through all scenes and is created on game start. The expected behavior you likely want is to check the current scene ID."}
