{"timestamp":"1674314167","author":"stblr","description":"There is a leftover `error.rs` file."}

{"timestamp":"1674313574","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/src/client.rs","range":{"startLine":18}},"description":"The aliases are fine, but I would prefer if they were used everywhere and not just in this file."}

{"timestamp":"1674313663","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/src/client.rs","range":{"startLine":114}},"description":"This allows the client to crash the server. We rather want the default case to disconnect the client (e.g.  if a Join request is received)."}

{"timestamp":"1674313773","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/src/server.rs","range":{"startLine":149}},"description":"I would suggest to add a getter instead, as the value should never be changed after construction."}

{"timestamp":"1674313897","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/src/server.rs","range":{"startLine":123}},"description":"Please explicitly ignore the error here."}

{"timestamp":"1674313938","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/src/client.rs","range":{"startLine":28}},"description":"receive"}

{"timestamp":"1674313989","author":"stblr","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/Cargo.toml","range":{"startLine":8}},"description":"What's the best practice here, since libhydrogen re-exports it?"}

{"timestamp":"1674315407","author":"GnomedDev","location":{"commit":"e74d1a6933029fea5be9cf369ddcb4ef54cac7a7","path":"tools/gameserver/Cargo.toml","range":{"startLine":8}},"description":"Adding the dependency to our project will just means that as long as anyhow doesn't go above 1.x, it just allows our crate access to the full anyhow crate instead of just the macro that libhydrogen re-exports. It also means that libhydrogen can have a breaking upgrade which removes anyhow usage without breaking our crate while upgrading the dependency."}
