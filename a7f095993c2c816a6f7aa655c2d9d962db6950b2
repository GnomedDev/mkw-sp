{"timestamp":"1681257588","author":"riidefi","description":"You can add a check like this\r\n```arm\r\nlis r3, g_skipThisCheck@ha\r\nlbz r3, g_skipThisCheck@l(r3)\r\ncmpwi r3, 0\r\nbneqlr\r\n```\r\n```c\r\nbool g_skipThisCheck;\r\n```"}

{"timestamp":"1681257713","author":"GnomedDev","description":"If you want to open a PR doing that, I'll close this, but I don't see the point in adding a \"randomly crash\" boolean, default set to false."}

{"timestamp":"1681257817","author":"riidefi","description":"The semantics would be \"allow the game to load obviously malformed and corrupted data\" and the default would be `false`."}

{"timestamp":"1681257870","author":"riidefi","description":"Keep in mind CTGP goes further than us, rejecting any track with say the `MDL0` magic missing."}

{"timestamp":"1681257896","author":"GnomedDev","description":"Maybe spending time developing a patch to stop the game doing that but allowing the track to still load would be beneficial. "}

{"timestamp":"1681258027","author":"riidefi","description":"What, with like a neural network trained to attempt to recover useful semantic information from nondeterministically malformed source data? "}

{"timestamp":"1681258055","author":"riidefi","description":"Does GPT4 perform well on hexdumps?"}

{"timestamp":"1681258144","author":"GnomedDev","description":"Knock it off with the attitude. I mean to avoid the invalid data causing any issues (substitute default values, act like a valid input was given, etc)."}

{"timestamp":"1681258468","author":"riidefi","description":"The issue is at this stage we're probably too late. We could do some heuristics on the SZS file and attempt to detect bad files and then omit them from the game's view, though. It would be a lot of effort for a single track, and not guaranteed to work on any other track given each track can uniquely corrupt their data. Therefore simply disabling the check for this particular track seems like a reasonable middle ground."}

{"timestamp":"1686951828","author":"riidefi","description":"I thought about this a bit more, and think we should merge this. Although we catch a bunch of malformed files, the error message we display to users is fairly unhelpful in this specific case. Really, we should scan the course, rather than trying to detect the crash as its happening."}
