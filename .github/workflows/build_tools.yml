on: 
  push:
    paths:
      - 'tools/**'
      - '.github/workflows/build_tools.yml'
  pull_request:
    paths:
      - 'tools/**'
      - '.github/workflows/build_tools.yml'


name: Build Tools

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      modified: ${{ steps.filter.outputs.changes }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          shared: &shared
            - tools/netprotocol/**
          gameserver:
            - *shared
            - tools/gameserver/**
          matchmaking:
            - *shared
            - tools/matchmaking/**
          netstorageserver:
            - tools/netstorageserver/**
          portfinder:
            - tools/portfinder/**
          updateserver:
            - tools/updateserver/**
          sign:
            - tools/sign/**

  build:
    name: Build
    needs: changes
    if: ${{ needs.changes.outputs.modified != '' && toJson(fromJson(needs.changes.outputs.modified)) != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        tool: ${{ fromJSON(needs.changes.outputs.modified) }}
        os:
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install protoc
        uses: arduino/setup-protoc@6d13ebf0ad347646e03d7e7792110174fe20745d
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build ${{ matrix.tool }}
        run: cargo build --manifest-path tools/${{ matrix.tool }}/Cargo.toml --release
      - name: Upload result
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.tool }}_${{ matrix.os }}
          path: |
            tools/${{ matrix.tool }}/target/release/${{ matrix.tool }}*
            tools/${{ matrix.tool }}/target/release/${{ matrix.tool }}.d

  format:
    name: Format
    needs: changes
    if: ${{ needs.changes.outputs.modified != '' && toJson(fromJson(needs.changes.outputs.modified)) != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        tool: ${{ fromJSON(needs.changes.outputs.modified) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Format ${{ matrix.tool }}
        run: cargo fmt --manifest-path tools/${{ matrix.tool }}/Cargo.toml --check
