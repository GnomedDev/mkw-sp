{"timestamp":"1676999141","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/FriendButton.hh","range":{"startLine":10}},"description":"What about the other member functions?"}

{"timestamp":"1676999149","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"configure.py","range":{"startLine":1498}},"description":"Ordering"}

{"timestamp":"1676999419","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"tools/gameserver/src/room.rs","range":{"startLine":140}},"description":"The TODO comment can be kept."}

{"timestamp":"1676999626","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/sp/cs/RoomClient.cc","range":{"startLine":638}},"description":"I would rather suggest to add a callback to the handler to prevent frontend details from leaking into the backend."}

{"timestamp":"1676999715","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/OnlineConnectionManagerPage.cc","range":{"startLine":28}},"description":"The base class already does this AFAIK."}

{"timestamp":"1676999772","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/OnlineTopPage.cc","range":{"startLine":77}},"description":"Decimal"}

{"timestamp":"1676999777","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/OnlineTopPage.cc","range":{"startLine":79}},"description":"Same"}

{"timestamp":"1676999971","author":"GnomedDev","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/OnlineConnectionManagerPage.cc","range":{"startLine":28}},"description":"The base class's implementation does not end up calling the `AsyncSocket` destructor and therefore caused \"Client already logged in\" issues as mentioned in the PR description. "}

{"timestamp":"1677000151","author":"GnomedDev","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/FriendButton.hh","range":{"startLine":10}},"description":"What do you mean? I implemented the bare minimum to get the button to load, as this is a MVP and other FriendButton stuff can be implemented later."}

{"timestamp":"1677000336","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/FriendButton.hh","range":{"startLine":10}},"description":"The `FriendButton` vfuncs won't be called so this is just a regular `PushButton`."}

{"timestamp":"1677000496","author":"GnomedDev","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/FriendButton.hh","range":{"startLine":10}},"description":"Honestly probably for the best, a lot of the friend code is directly calling gamespy stuff (hence the `WifiFriendMenu` being deleted and the button being stubbed), the only reason this I even call to this load function is to avoid a broken animation."}

{"timestamp":"1677001619","author":"stblr","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/game/ui/FriendButton.hh","range":{"startLine":10}},"description":"Since this is temporary and doesn't break anything, I guess this is fine to have this hybrid class for now."}

{"timestamp":"1677002160","author":"GnomedDev","location":{"commit":"6600312188ce39138290746c16b5b32da677a37f","path":"payload/sp/cs/RoomClient.cc","range":{"startLine":638}},"description":"Wouldn't that remove the ability to report `30004` (`RoomClient` missing), as a RoomClient would have to be there to call the handler and calling a method with a null `this` pointer is UB."}
